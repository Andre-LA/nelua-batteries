--[[
Example of calculating 1000 digits of PI using BigInt.

I uses the Machin tecnhique for computing PI digits,
See https://en.wikipedia.org/wiki/Machin-like_formula for details.
]]

-- Un comment the following if you have GMP installed in your system to increase speed.
-- ## BIGINT_USE_GMP = true

local BigInt = require 'bigint'

local function arctan_denom(x: integer, ndigits: integer): BigInt
  local one = BigInt.pow(10, ndigits)
  local d = BigInt.from(x)
  local d2 = -(d*d)
  local i = 0
  local sum = BigInt.from(0)
  repeat
    local term = one // (d * (2*i + 1))
    sum = sum + term
    d = d * d2
    i = i + 1
  until term == 0
  return sum
end

local function compute_pi(ndigits: integer): string
  local ndigits2 = ndigits + 10
  local pi = 4*(4*arctan_denom(5, ndigits2) - arctan_denom(239, ndigits2))
  local pistr = tostring(pi)
  return pistr:sub(1,1)..'.'..pistr:sub(2, ndigits + 1)
end

local pi = compute_pi(1000)
print('The first 1000 pi digits are:')
print(pi)
assert(pi == '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989')
