require 'inspector'
require 'nester'

nester.describe("inspector", function()
  nester.describe("primitives", function()
    nester.describe("simple", function()
      nester.it("booleans", function()
        local result <close> = inspector(true)
        expect.equal(result, "true")

        local result <close> = inspector(false)
        expect.equal(result, "false")
      end)

      nester.it("integers", function()
        local result <close> = inspector(10)
        expect.equal(result, "10")
      end)

      nester.it("numbers", function()
        local result <close> = inspector(20.20)
        expect.equal(result, "20.2")

        local result <close> = inspector(30_number)
        expect.equal(result, "30.0")
      end)

      nester.it("strings", function()
        local result <close> = inspector("hello world!")
        expect.equal(result, "hello world!")

        local result <close> = inspector("(cstring) hello world!"_cstring)
        expect.equal(result, "(cstring) hello world!")
      end)
    end)

    nester.describe("arrays", function()
      nester.it("boolean arrays", function()
        local result <close> = inspector((@array(boolean, 3)){true, false, false})
        expect.equal(result, "(@array(boolean, 3)){ true, false, false }")

        -- using syntax sugar
        local result <close> = inspector((@[2]boolean){false, true})
        expect.equal(result, "(@array(boolean, 2)){ false, true }")
      end)

      nester.it("scalar arrays", function()
        local result <close> = inspector((@array(uint16, 3)){3, 4, 5})
        expect.equal(result, "(@array(uint16, 3)){ 3, 4, 5 }")

        -- using syntax sugar
        local result <close> = inspector((@[2]integer){1, 2})
        expect.equal(result, "(@array(int64, 2)){ 1, 2 }")

        -- inferred size
        local result <close> = inspector((@[]number){-3, -2})
        expect.equal(result, "(@array(float64, 2)){ -3.0, -2.0 }")
      end)
    end)

    nester.it("enums", function()
      local Weeks = @enum{
        Sunday = 0,
        Monday,
        Tuesday,
        Wednesday,
        Thursday,
        Friday,
        Saturday
      }

      local ByteWeeks = @enum(byte){
        Sunday = 0,
        Monday,
        Tuesday,
        Wednesday,
        Thursday,
        Friday,
        Saturday
      }

      local result <close> = inspector(Weeks.Tuesday)
      expect.equal(result, "Weeks.Tuesday --[[ = 2_int64 ]]")

      local result <close> = inspector(ByteWeeks.Friday)
      expect.equal(result, "ByteWeeks.Friday --[[ = 5_uint8 ]]")
    end)
  end)
end)
